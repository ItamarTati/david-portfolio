{"version":3,"sources":["Images/MaruMaru/img1.jpg","Images/MaruMaru/img2.jpg","Images/MaruMaru/img3.jpg","Images/MaruMaru/img4.jpg","Images/MaruMaru/img5.jpg","Images/MaruMaru/img6.jpg","Images/MaruMaru/img7.jpg","Images/MaruMaru/img8.jpg","Images/MirrorMe/img1.png","Images/MirrorMe/img2.png","Images/MirrorMe/img3.png","Images/MirrorMe/img4.png","Images/MirrorMe/img5.png","Images/MirrorMe/img6.png","Images/MirrorMe/img7.png","Images/MirrorMe/img8.png","Images/MirrorMe/img9.png","Images/MirrorMe/img10.png","Images/MirrorMe/img11.png","Images/prototypes/ItsRainingMen.gif","Images/prototypes/PacMaze.gif","Data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Data","games","profile","name","title","bio","gameOne","description","instructions","images","require","gameTwo","gameThree","App","props","nextPage","bind","prevPage","goToPageOne","goToPageTwo","goToPageThree","state","page","this","setState","className","onClick","Page","photos","Component","Slider","goToPrevSlide","currentIndex","prevState","translateValue","slideWidth","goToNextSlide","length","document","querySelector","clientWidth","style","transform","transition","map","image","i","key","React","Slide","styles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","LeftArrow","RightArrow","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbe19063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.54ab78b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.4339bfcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.90007c42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.a6bff0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img5.196f180a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img6.4fc8919e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img7.e76f2447.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img8.e2548d5a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.1c7fed67.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.f8424d4f.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.25f19825.png\";","module.exports = __webpack_public_path__ + \"static/media/img4.bdec31cb.png\";","module.exports = __webpack_public_path__ + \"static/media/img5.38ebddc9.png\";","module.exports = __webpack_public_path__ + \"static/media/img6.a17a2dc6.png\";","module.exports = __webpack_public_path__ + \"static/media/img7.3fd2db82.png\";","module.exports = __webpack_public_path__ + \"static/media/img8.f49ad6b7.png\";","module.exports = __webpack_public_path__ + \"static/media/img9.00c531f0.png\";","module.exports = __webpack_public_path__ + \"static/media/img10.d181b075.png\";","module.exports = __webpack_public_path__ + \"static/media/img11.aa813dd3.png\";","module.exports = __webpack_public_path__ + \"static/media/ItsRainingMen.4b8c9080.gif\";","module.exports = __webpack_public_path__ + \"static/media/PacMaze.a9fa0b75.gif\";","function Data(){\n    return { \n        \n                profile : {\n                    name: 'David Bud',\n                    title: 'Game Designer',\n                    bio: `Hi my name is David, I am a Passionate Games Designer that uses C#, JavaScript and Unity. \n                        I enjoy learning and challenging myself to be a better designer` \n\n                }, \n\n        \n                gameOne: {\n                name : 'Maru Maru',  \n                description : `Maru Maru is a puzzle game designed in my spare time for me to learn how to publish a game. \n                                It's my first Android game and was made in Unity.`, \n                instructions : `In this puzzle game the goal is to turn on all the robots. This can be achieved by turning on/off their neighbours. When \n                                clicking a robot, any adjacent robots will also change their state, if a robot is on, they will turn off, and visa versa. \n                                Each level has a new puzzle to work through, and while some levels may look similar, they have very different ways of solving\n                                them. Initially, the game was going to be 9 levels long, but after some play testing I was told that while people enjoyed \n                                the concept, the players who easily past the levels were dissapointed there were not more. The thing I found hardest about \n                                making this game, was balancing, as some playtesters would be able to finish all the levels within 10 minutes, while others \n                                would struggle on the first level for 30. I tried to fix this with the tutorial, however I'm unsure if that has helped much. \n                                Something I would do differently in the future would be to slowly ramp up the difficulty. I did not do that in this game \n                                as I only wanted a set amount of levels, and I wanted more advanced players to still find a challange in this game.`,\n                images : \n                                [require('./Images/MaruMaru/img1.jpg'), require('./Images/MaruMaru/img2.jpg'), require('./Images/MaruMaru/img3.jpg'), \n                                require('./Images/MaruMaru/img4.jpg'), require('./Images/MaruMaru/img5.jpg'), require('./Images/MaruMaru/img6.jpg'), \n                                require('./Images/MaruMaru/img7.jpg'), require('./Images/MaruMaru/img8.jpg') \n            ]\n\n                    },\n\n                gameTwo : {\n                name: `Mirror Me`,\n                description : `Mirror Me was a final year university collaborative project between myself and Daniel Bou-Antoun.\n                                The game took the better part of a year and started off as a simple idea \"What if you had to kill your mirror copy. This came together \n                                when I created a small prototype where a player would be mirrored past a transparent wall and would have to use the other character to \n                                walk through the level assisted by the visible parts of the mirrored level.`,\n                instructions : `Initially the game was going to just have your mirror copy past a semi transparent wall, this would have served as a 'mirror', and once \n                                the player eliminated the copy, they could move across to the other side by clicking on an empty mirror object at the end of each level.\n                                At this point the player would not actually interact at all with the mirror copy, but this quickly changed as we recieved feedback on \n                                the game.`,\n                images : \n                            [require('./Images/MirrorMe/img1.png'), require('./Images/MirrorMe/img2.png'), require('./Images/MirrorMe/img3.png'), \n                            require('./Images/MirrorMe/img4.png'), require('./Images/MirrorMe/img5.png'), require('./Images/MirrorMe/img6.png'), \n                            require('./Images/MirrorMe/img7.png'), require('./Images/MirrorMe/img8.png'), require('./Images/MirrorMe/img9.png'), \n                            require('./Images/MirrorMe/img10.png'), require('./Images/MirrorMe/img11.png')]\n                },\n\n                gameThree : {\n                name: `Game 3`,\n                description: `none`,\n                instructions: `none`,\n                images : [require('./Images/prototypes/ItsRainingMen.gif'), require('./Images/prototypes/PacMaze.gif')]\n            }\n    \n}\n}\n\nexport default Data","import React, { Component } from 'react';\nimport './index.css';\nimport Data from './Data'\n\nlet games = Data()\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.nextPage = this.nextPage.bind(this);\n        this.prevPage = this.prevPage.bind(this);\n        this.goToPageOne = this.goToPageOne.bind(this);\n        this.goToPageTwo = this.goToPageTwo.bind(this);\n        this.goToPageThree = this.goToPageThree.bind(this);\n        this.state = {\n          page: 1,\n        };\n      }\n\n\n      nextPage() {\n        if(this.state.page < 3){\n        this.setState({ page: this.state.page + 1 } )\n      }\n    else return null \n    }\n\n      prevPage(){\n        if(this.state.page !==1){\n        this.setState({ page: this.state.page - 1 } )\n\n      }\n      else return null \n\n    }\n\n      goToPageOne(){\n        this.setState({ page: 1 } )\n\n      }\n      goToPageTwo(){\n        this.setState({ page: 2 } )\n      }\n      goToPageThree(){\n        this.setState({ page: 3 } )\n      }\n      \n\n      \n\n    render() {  \n      const { page } = this.state;\n\n        return (\n          \n\n          <div className = 'main-page' >\n          <h1>{games.profile.name}</h1>\n          <h2>{games.profile.title}</h2>\n\t\t\t\t\t<p>{games.profile.title}</p>\n\n          {page === 1 ? <ul >\n                            <li ><button>{games.gameOne.name}</button></li>\n                            <li ><button onClick = {this.goToPageTwo}>{games.gameTwo.name}</button></li>\n                            <li ><button onClick = {this.goToPageThree}>{games.gameThree.name}</button></li>\n                          </ul>: \n            page === 2 ? <ul >\n                            <li ><button onClick = {this.goToPageOne}>{games.gameOne.name}</button></li>\n                            <li ><button>{games.gameTwo.name}</button></li>\n                            <li ><button onClick = {this.goToPageThree}>{games.gameThree.name}</button></li>\n                         </ul>:\n                         <ul >\n                            <li ><button onClick = {this.goToPageOne}>{games.gameOne.name}</button></li>\n                            <li ><button onClick = {this.goToPageTwo}>{games.gameTwo.name}</button></li>\n                            <li ><button >{games.gameThree.name}</button></li>\n                          </ul>} \n            \n            {page === 1 && <Page name={games.gameOne.name} description={games.gameOne.description} photos={games.gameOne.images} instructions={games.gameOne.instructions}/>} \n            {page === 2 && <Page  name={games.gameTwo.name} description={games.gameTwo.description} photos={games.gameTwo.images} instructions={games.gameTwo.instructions}/>}\n            {page === 3 && <Page  name={games.gameThree.name} description={games.gameThree.description} photos={games.gameThree.images} instructions={games.gameThree.instructions}/> }\n\n            <button onClick = {this.prevPage}>previous page</button>\n            <button onClick = {this.nextPage}>next page</button> \n        </div>\n        \n      );\n    }\n  }\n\nfunction Page(props){\n  return (\n    <div className = 'page'>\n      <h3>{props.name}</h3>\n      <p>{props.description}</p>\n      <div><Slider photos={props.photos}/></div>\n      <p>{props.instructions}</p>\n\n    </div>\n  )\n}\n  \n\nclass Slider extends React.Component {  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      images: props.photos,\n      currentIndex: 0,\n      translateValue: 0\n    }\n  }\n\n  goToPrevSlide = () => {\n    if(this.state.currentIndex === 0)\n      return;\n    \n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      translateValue: prevState.translateValue + this.slideWidth()\n    }))\n  }\n\n  goToNextSlide = () => {\n\n    if(this.state.currentIndex === this.state.images.length - 1) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      })\n    }\n    \n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1,\n      translateValue: prevState.translateValue + -(this.slideWidth())\n    }));\n  }\n\n  slideWidth = () => {\n     return document.querySelector('.slide').clientWidth\n  }\n\n  render() {\n    return (\n      <div className=\"slider\">\n\n        <div className=\"slider-wrapper\"\n          style={{\n            transform: `translateX(${this.state.translateValue}px)`,\n            transition: 'transform ease-out 0.45s'\n          }}>\n            {\n              this.state.images.map((image, i) => (\n                <Slide key={i} image={image} />\n              ))\n            }\n        </div>\n\n        <LeftArrow\n         goToPrevSlide={this.goToPrevSlide}\n        />\n\n        <RightArrow\n         goToNextSlide={this.goToNextSlide}\n        />\n      </div>\n    );\n  }\n}\n\n\nconst Slide = ({ image }) => {\n  const styles = {\n    backgroundImage: `url(${image})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '50% 60%'\n  }\n  return <div className=\"slide\" style={styles}></div>\n}\n\n\n\n\nconst LeftArrow = (props) => {\n  return (\n    <div className=\"backArrow arrow\" onClick={props.goToPrevSlide}>\n      <i className='left'></i>\n    </div>\n  );\n}\n\n\nconst RightArrow = (props) => {\n  return (\n    <div className=\"nextArrow arrow\" onClick={props.goToNextSlide}>\n      <i className='right'></i>\n    </div>\n  );\n}\n  \n  export default App;\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}